/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kafka.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class legalentity extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -185751413583334808L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"legalentity\",\"namespace\":\"com.kafka.avro\",\"fields\":[{\"name\":\"LEGAL_ENTITY_ID\",\"type\":[\"string\",\"null\"],\"definition\":\"Uniquely identifies each entity associated with this application (applicant, auth-user, co-applicant, business, etc ...).  This ID is expected to be assigned by the Zoot system and be unique.\"},{\"name\":\"APPLICATION_ID\",\"type\":[\"string\",\"null\"],\"definition\":\"Uniquely identifies each application\"},{\"name\":\"LEGAL_ENTITY_TYPE_CD\",\"type\":[\"string\",\"null\"],\"definition\":\"Identifies type of entity on the application (i.e. primary, co-borrower, co-signer, guarantor)\"},{\"name\":\"TAX_ID\",\"type\":[\"string\",\"null\"],\"definition\":\"SSN or tax id number.\"},{\"name\":\"PRIMARY_EMAIL_ADDRESS\",\"type\":[\"string\",\"null\"],\"definition\":\"Individual's primary email address.\"},{\"name\":\"ANNUAL_INCOME\",\"type\":[\"string\",\"null\"],\"definition\":\"Annual Income\"},{\"name\":\"INSRT_TS\",\"type\":[\"string\",\"null\"],\"definition\":\"Date/Time of the insert of the record into the database.  At initial insertion, the insrt_ts and chng_ts will be the same. Once populated this column should never change.\"},{\"name\":\"CHNG_TS\",\"type\":[\"string\",\"null\"],\"definition\":\"Date/Time that any column for a given row in the table is changed.  At initial insertion, the insrt_ts and chng_ts should be the same. Any modification to the record going forward will update this column with the current date/time.\"},{\"name\":\"INSRT_USR_ID\",\"type\":[\"string\",\"null\"],\"definition\":\"The insrt_usr_id column is the system UUID for the user name of the person using the application that made the initial insert of this row of data. At initial row insertion time the insrt_usr_id and chng_usr_id should be the same. Once populated this column should never change.\"},{\"name\":\"CHNG_USR_ID\",\"type\":[\"string\",\"null\"],\"definition\":\"The chng_usr_id column is the system UUID  for the user name of the person using the application that made the most recent change to this row of data. At initial row insertion time the insrt_usr_id and chng_usr_id should be the same. Any subsequent change to data in a given row should require an update of this column.\"},{\"name\":\"ACTIVE_FLAG\",\"type\":\"int\",\"definition\":\"Boolean value indicating if the record is currently active\"},{\"name\":\"KYC_VERIFICATION_VENDOR\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity know_your_customer\"},{\"name\":\"KYC_VERIFICATION_STATUS\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity know_your_customer\"},{\"name\":\"KYC_REASON_CODE_1\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity know_your_customer\"},{\"name\":\"KYC_REASON_CODE_2\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity know_your_customer\"},{\"name\":\"KCY_REASON_CODE_3\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity know_your_customer\"},{\"name\":\"KYC_REASON_CODE_4\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity know_your_customer\"},{\"name\":\"ANNUAL_INCOME_AMOUNT\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"PRIMARY_APPLICANT_SIGNED\",\"type\":\"int\",\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"EMAIL_PREFERENCE_FLAG\",\"type\":\"int\",\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_NUMBER\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_ISSUANCE_STATE\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_NAME_CHANGED\",\"type\":\"int\",\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_DATE_OF_BIRTH_CHANGED\",\"type\":\"int\",\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_ORIGINAL_ADDRESS_SOURCE\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_ADDRESS_CHANGED\",\"type\":\"int\",\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_ISSUE_DATE\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_EXPIRATION_DATE\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_ENTRY_FORMAT_FAILED\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_SWIPE_RESPONSE_CODE\",\"type\":\"int\",\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_SWIPE_METHOD_INDICATOR\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_QUALIFYING_CARD_TYPE\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"DL_QUALIFYING_CARD_BYPASSED\",\"type\":[\"string\",\"null\"],\"definition\":\"Mapped from RedCard API Request entity primary_applicant_information\"},{\"name\":\"REFERENCE_ID\",\"type\":[\"string\",\"null\"],\"definition\":\"Reference ID assigned to the application, displayed to users.  Format of this ID can be defined by the client, it is recommended to be unique.  *application_id from Target API\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<legalentity> ENCODER =
      new BinaryMessageEncoder<legalentity>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<legalentity> DECODER =
      new BinaryMessageDecoder<legalentity>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<legalentity> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<legalentity> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<legalentity>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this legalentity to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a legalentity from a ByteBuffer. */
  public static legalentity fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence LEGAL_ENTITY_ID;
  @Deprecated public java.lang.CharSequence APPLICATION_ID;
  @Deprecated public java.lang.CharSequence LEGAL_ENTITY_TYPE_CD;
  @Deprecated public java.lang.CharSequence TAX_ID;
  @Deprecated public java.lang.CharSequence PRIMARY_EMAIL_ADDRESS;
  @Deprecated public java.lang.CharSequence ANNUAL_INCOME;
  @Deprecated public java.lang.CharSequence INSRT_TS;
  @Deprecated public java.lang.CharSequence CHNG_TS;
  @Deprecated public java.lang.CharSequence INSRT_USR_ID;
  @Deprecated public java.lang.CharSequence CHNG_USR_ID;
  @Deprecated public int ACTIVE_FLAG;
  @Deprecated public java.lang.CharSequence KYC_VERIFICATION_VENDOR;
  @Deprecated public java.lang.CharSequence KYC_VERIFICATION_STATUS;
  @Deprecated public java.lang.CharSequence KYC_REASON_CODE_1;
  @Deprecated public java.lang.CharSequence KYC_REASON_CODE_2;
  @Deprecated public java.lang.CharSequence KCY_REASON_CODE_3;
  @Deprecated public java.lang.CharSequence KYC_REASON_CODE_4;
  @Deprecated public java.lang.CharSequence ANNUAL_INCOME_AMOUNT;
  @Deprecated public int PRIMARY_APPLICANT_SIGNED;
  @Deprecated public int EMAIL_PREFERENCE_FLAG;
  @Deprecated public java.lang.CharSequence DL_NUMBER;
  @Deprecated public java.lang.CharSequence DL_ISSUANCE_STATE;
  @Deprecated public int DL_NAME_CHANGED;
  @Deprecated public int DL_DATE_OF_BIRTH_CHANGED;
  @Deprecated public java.lang.CharSequence DL_ORIGINAL_ADDRESS_SOURCE;
  @Deprecated public int DL_ADDRESS_CHANGED;
  @Deprecated public java.lang.CharSequence DL_ISSUE_DATE;
  @Deprecated public java.lang.CharSequence DL_EXPIRATION_DATE;
  @Deprecated public java.lang.CharSequence DL_ENTRY_FORMAT_FAILED;
  @Deprecated public int DL_SWIPE_RESPONSE_CODE;
  @Deprecated public java.lang.CharSequence DL_SWIPE_METHOD_INDICATOR;
  @Deprecated public java.lang.CharSequence DL_QUALIFYING_CARD_TYPE;
  @Deprecated public java.lang.CharSequence DL_QUALIFYING_CARD_BYPASSED;
  @Deprecated public java.lang.CharSequence REFERENCE_ID;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public legalentity() {}

  /**
   * All-args constructor.
   * @param LEGAL_ENTITY_ID The new value for LEGAL_ENTITY_ID
   * @param APPLICATION_ID The new value for APPLICATION_ID
   * @param LEGAL_ENTITY_TYPE_CD The new value for LEGAL_ENTITY_TYPE_CD
   * @param TAX_ID The new value for TAX_ID
   * @param PRIMARY_EMAIL_ADDRESS The new value for PRIMARY_EMAIL_ADDRESS
   * @param ANNUAL_INCOME The new value for ANNUAL_INCOME
   * @param INSRT_TS The new value for INSRT_TS
   * @param CHNG_TS The new value for CHNG_TS
   * @param INSRT_USR_ID The new value for INSRT_USR_ID
   * @param CHNG_USR_ID The new value for CHNG_USR_ID
   * @param ACTIVE_FLAG The new value for ACTIVE_FLAG
   * @param KYC_VERIFICATION_VENDOR The new value for KYC_VERIFICATION_VENDOR
   * @param KYC_VERIFICATION_STATUS The new value for KYC_VERIFICATION_STATUS
   * @param KYC_REASON_CODE_1 The new value for KYC_REASON_CODE_1
   * @param KYC_REASON_CODE_2 The new value for KYC_REASON_CODE_2
   * @param KCY_REASON_CODE_3 The new value for KCY_REASON_CODE_3
   * @param KYC_REASON_CODE_4 The new value for KYC_REASON_CODE_4
   * @param ANNUAL_INCOME_AMOUNT The new value for ANNUAL_INCOME_AMOUNT
   * @param PRIMARY_APPLICANT_SIGNED The new value for PRIMARY_APPLICANT_SIGNED
   * @param EMAIL_PREFERENCE_FLAG The new value for EMAIL_PREFERENCE_FLAG
   * @param DL_NUMBER The new value for DL_NUMBER
   * @param DL_ISSUANCE_STATE The new value for DL_ISSUANCE_STATE
   * @param DL_NAME_CHANGED The new value for DL_NAME_CHANGED
   * @param DL_DATE_OF_BIRTH_CHANGED The new value for DL_DATE_OF_BIRTH_CHANGED
   * @param DL_ORIGINAL_ADDRESS_SOURCE The new value for DL_ORIGINAL_ADDRESS_SOURCE
   * @param DL_ADDRESS_CHANGED The new value for DL_ADDRESS_CHANGED
   * @param DL_ISSUE_DATE The new value for DL_ISSUE_DATE
   * @param DL_EXPIRATION_DATE The new value for DL_EXPIRATION_DATE
   * @param DL_ENTRY_FORMAT_FAILED The new value for DL_ENTRY_FORMAT_FAILED
   * @param DL_SWIPE_RESPONSE_CODE The new value for DL_SWIPE_RESPONSE_CODE
   * @param DL_SWIPE_METHOD_INDICATOR The new value for DL_SWIPE_METHOD_INDICATOR
   * @param DL_QUALIFYING_CARD_TYPE The new value for DL_QUALIFYING_CARD_TYPE
   * @param DL_QUALIFYING_CARD_BYPASSED The new value for DL_QUALIFYING_CARD_BYPASSED
   * @param REFERENCE_ID The new value for REFERENCE_ID
   */
  public legalentity(java.lang.CharSequence LEGAL_ENTITY_ID, java.lang.CharSequence APPLICATION_ID, java.lang.CharSequence LEGAL_ENTITY_TYPE_CD, java.lang.CharSequence TAX_ID, java.lang.CharSequence PRIMARY_EMAIL_ADDRESS, java.lang.CharSequence ANNUAL_INCOME, java.lang.CharSequence INSRT_TS, java.lang.CharSequence CHNG_TS, java.lang.CharSequence INSRT_USR_ID, java.lang.CharSequence CHNG_USR_ID, java.lang.Integer ACTIVE_FLAG, java.lang.CharSequence KYC_VERIFICATION_VENDOR, java.lang.CharSequence KYC_VERIFICATION_STATUS, java.lang.CharSequence KYC_REASON_CODE_1, java.lang.CharSequence KYC_REASON_CODE_2, java.lang.CharSequence KCY_REASON_CODE_3, java.lang.CharSequence KYC_REASON_CODE_4, java.lang.CharSequence ANNUAL_INCOME_AMOUNT, java.lang.Integer PRIMARY_APPLICANT_SIGNED, java.lang.Integer EMAIL_PREFERENCE_FLAG, java.lang.CharSequence DL_NUMBER, java.lang.CharSequence DL_ISSUANCE_STATE, java.lang.Integer DL_NAME_CHANGED, java.lang.Integer DL_DATE_OF_BIRTH_CHANGED, java.lang.CharSequence DL_ORIGINAL_ADDRESS_SOURCE, java.lang.Integer DL_ADDRESS_CHANGED, java.lang.CharSequence DL_ISSUE_DATE, java.lang.CharSequence DL_EXPIRATION_DATE, java.lang.CharSequence DL_ENTRY_FORMAT_FAILED, java.lang.Integer DL_SWIPE_RESPONSE_CODE, java.lang.CharSequence DL_SWIPE_METHOD_INDICATOR, java.lang.CharSequence DL_QUALIFYING_CARD_TYPE, java.lang.CharSequence DL_QUALIFYING_CARD_BYPASSED, java.lang.CharSequence REFERENCE_ID) {
    this.LEGAL_ENTITY_ID = LEGAL_ENTITY_ID;
    this.APPLICATION_ID = APPLICATION_ID;
    this.LEGAL_ENTITY_TYPE_CD = LEGAL_ENTITY_TYPE_CD;
    this.TAX_ID = TAX_ID;
    this.PRIMARY_EMAIL_ADDRESS = PRIMARY_EMAIL_ADDRESS;
    this.ANNUAL_INCOME = ANNUAL_INCOME;
    this.INSRT_TS = INSRT_TS;
    this.CHNG_TS = CHNG_TS;
    this.INSRT_USR_ID = INSRT_USR_ID;
    this.CHNG_USR_ID = CHNG_USR_ID;
    this.ACTIVE_FLAG = ACTIVE_FLAG;
    this.KYC_VERIFICATION_VENDOR = KYC_VERIFICATION_VENDOR;
    this.KYC_VERIFICATION_STATUS = KYC_VERIFICATION_STATUS;
    this.KYC_REASON_CODE_1 = KYC_REASON_CODE_1;
    this.KYC_REASON_CODE_2 = KYC_REASON_CODE_2;
    this.KCY_REASON_CODE_3 = KCY_REASON_CODE_3;
    this.KYC_REASON_CODE_4 = KYC_REASON_CODE_4;
    this.ANNUAL_INCOME_AMOUNT = ANNUAL_INCOME_AMOUNT;
    this.PRIMARY_APPLICANT_SIGNED = PRIMARY_APPLICANT_SIGNED;
    this.EMAIL_PREFERENCE_FLAG = EMAIL_PREFERENCE_FLAG;
    this.DL_NUMBER = DL_NUMBER;
    this.DL_ISSUANCE_STATE = DL_ISSUANCE_STATE;
    this.DL_NAME_CHANGED = DL_NAME_CHANGED;
    this.DL_DATE_OF_BIRTH_CHANGED = DL_DATE_OF_BIRTH_CHANGED;
    this.DL_ORIGINAL_ADDRESS_SOURCE = DL_ORIGINAL_ADDRESS_SOURCE;
    this.DL_ADDRESS_CHANGED = DL_ADDRESS_CHANGED;
    this.DL_ISSUE_DATE = DL_ISSUE_DATE;
    this.DL_EXPIRATION_DATE = DL_EXPIRATION_DATE;
    this.DL_ENTRY_FORMAT_FAILED = DL_ENTRY_FORMAT_FAILED;
    this.DL_SWIPE_RESPONSE_CODE = DL_SWIPE_RESPONSE_CODE;
    this.DL_SWIPE_METHOD_INDICATOR = DL_SWIPE_METHOD_INDICATOR;
    this.DL_QUALIFYING_CARD_TYPE = DL_QUALIFYING_CARD_TYPE;
    this.DL_QUALIFYING_CARD_BYPASSED = DL_QUALIFYING_CARD_BYPASSED;
    this.REFERENCE_ID = REFERENCE_ID;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return LEGAL_ENTITY_ID;
    case 1: return APPLICATION_ID;
    case 2: return LEGAL_ENTITY_TYPE_CD;
    case 3: return TAX_ID;
    case 4: return PRIMARY_EMAIL_ADDRESS;
    case 5: return ANNUAL_INCOME;
    case 6: return INSRT_TS;
    case 7: return CHNG_TS;
    case 8: return INSRT_USR_ID;
    case 9: return CHNG_USR_ID;
    case 10: return ACTIVE_FLAG;
    case 11: return KYC_VERIFICATION_VENDOR;
    case 12: return KYC_VERIFICATION_STATUS;
    case 13: return KYC_REASON_CODE_1;
    case 14: return KYC_REASON_CODE_2;
    case 15: return KCY_REASON_CODE_3;
    case 16: return KYC_REASON_CODE_4;
    case 17: return ANNUAL_INCOME_AMOUNT;
    case 18: return PRIMARY_APPLICANT_SIGNED;
    case 19: return EMAIL_PREFERENCE_FLAG;
    case 20: return DL_NUMBER;
    case 21: return DL_ISSUANCE_STATE;
    case 22: return DL_NAME_CHANGED;
    case 23: return DL_DATE_OF_BIRTH_CHANGED;
    case 24: return DL_ORIGINAL_ADDRESS_SOURCE;
    case 25: return DL_ADDRESS_CHANGED;
    case 26: return DL_ISSUE_DATE;
    case 27: return DL_EXPIRATION_DATE;
    case 28: return DL_ENTRY_FORMAT_FAILED;
    case 29: return DL_SWIPE_RESPONSE_CODE;
    case 30: return DL_SWIPE_METHOD_INDICATOR;
    case 31: return DL_QUALIFYING_CARD_TYPE;
    case 32: return DL_QUALIFYING_CARD_BYPASSED;
    case 33: return REFERENCE_ID;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: LEGAL_ENTITY_ID = (java.lang.CharSequence)value$; break;
    case 1: APPLICATION_ID = (java.lang.CharSequence)value$; break;
    case 2: LEGAL_ENTITY_TYPE_CD = (java.lang.CharSequence)value$; break;
    case 3: TAX_ID = (java.lang.CharSequence)value$; break;
    case 4: PRIMARY_EMAIL_ADDRESS = (java.lang.CharSequence)value$; break;
    case 5: ANNUAL_INCOME = (java.lang.CharSequence)value$; break;
    case 6: INSRT_TS = (java.lang.CharSequence)value$; break;
    case 7: CHNG_TS = (java.lang.CharSequence)value$; break;
    case 8: INSRT_USR_ID = (java.lang.CharSequence)value$; break;
    case 9: CHNG_USR_ID = (java.lang.CharSequence)value$; break;
    case 10: ACTIVE_FLAG = (java.lang.Integer)value$; break;
    case 11: KYC_VERIFICATION_VENDOR = (java.lang.CharSequence)value$; break;
    case 12: KYC_VERIFICATION_STATUS = (java.lang.CharSequence)value$; break;
    case 13: KYC_REASON_CODE_1 = (java.lang.CharSequence)value$; break;
    case 14: KYC_REASON_CODE_2 = (java.lang.CharSequence)value$; break;
    case 15: KCY_REASON_CODE_3 = (java.lang.CharSequence)value$; break;
    case 16: KYC_REASON_CODE_4 = (java.lang.CharSequence)value$; break;
    case 17: ANNUAL_INCOME_AMOUNT = (java.lang.CharSequence)value$; break;
    case 18: PRIMARY_APPLICANT_SIGNED = (java.lang.Integer)value$; break;
    case 19: EMAIL_PREFERENCE_FLAG = (java.lang.Integer)value$; break;
    case 20: DL_NUMBER = (java.lang.CharSequence)value$; break;
    case 21: DL_ISSUANCE_STATE = (java.lang.CharSequence)value$; break;
    case 22: DL_NAME_CHANGED = (java.lang.Integer)value$; break;
    case 23: DL_DATE_OF_BIRTH_CHANGED = (java.lang.Integer)value$; break;
    case 24: DL_ORIGINAL_ADDRESS_SOURCE = (java.lang.CharSequence)value$; break;
    case 25: DL_ADDRESS_CHANGED = (java.lang.Integer)value$; break;
    case 26: DL_ISSUE_DATE = (java.lang.CharSequence)value$; break;
    case 27: DL_EXPIRATION_DATE = (java.lang.CharSequence)value$; break;
    case 28: DL_ENTRY_FORMAT_FAILED = (java.lang.CharSequence)value$; break;
    case 29: DL_SWIPE_RESPONSE_CODE = (java.lang.Integer)value$; break;
    case 30: DL_SWIPE_METHOD_INDICATOR = (java.lang.CharSequence)value$; break;
    case 31: DL_QUALIFYING_CARD_TYPE = (java.lang.CharSequence)value$; break;
    case 32: DL_QUALIFYING_CARD_BYPASSED = (java.lang.CharSequence)value$; break;
    case 33: REFERENCE_ID = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'LEGAL_ENTITY_ID' field.
   * @return The value of the 'LEGAL_ENTITY_ID' field.
   */
  public java.lang.CharSequence getLEGALENTITYID() {
    return LEGAL_ENTITY_ID;
  }

  /**
   * Sets the value of the 'LEGAL_ENTITY_ID' field.
   * @param value the value to set.
   */
  public void setLEGALENTITYID(java.lang.CharSequence value) {
    this.LEGAL_ENTITY_ID = value;
  }

  /**
   * Gets the value of the 'APPLICATION_ID' field.
   * @return The value of the 'APPLICATION_ID' field.
   */
  public java.lang.CharSequence getAPPLICATIONID() {
    return APPLICATION_ID;
  }

  /**
   * Sets the value of the 'APPLICATION_ID' field.
   * @param value the value to set.
   */
  public void setAPPLICATIONID(java.lang.CharSequence value) {
    this.APPLICATION_ID = value;
  }

  /**
   * Gets the value of the 'LEGAL_ENTITY_TYPE_CD' field.
   * @return The value of the 'LEGAL_ENTITY_TYPE_CD' field.
   */
  public java.lang.CharSequence getLEGALENTITYTYPECD() {
    return LEGAL_ENTITY_TYPE_CD;
  }

  /**
   * Sets the value of the 'LEGAL_ENTITY_TYPE_CD' field.
   * @param value the value to set.
   */
  public void setLEGALENTITYTYPECD(java.lang.CharSequence value) {
    this.LEGAL_ENTITY_TYPE_CD = value;
  }

  /**
   * Gets the value of the 'TAX_ID' field.
   * @return The value of the 'TAX_ID' field.
   */
  public java.lang.CharSequence getTAXID() {
    return TAX_ID;
  }

  /**
   * Sets the value of the 'TAX_ID' field.
   * @param value the value to set.
   */
  public void setTAXID(java.lang.CharSequence value) {
    this.TAX_ID = value;
  }

  /**
   * Gets the value of the 'PRIMARY_EMAIL_ADDRESS' field.
   * @return The value of the 'PRIMARY_EMAIL_ADDRESS' field.
   */
  public java.lang.CharSequence getPRIMARYEMAILADDRESS() {
    return PRIMARY_EMAIL_ADDRESS;
  }

  /**
   * Sets the value of the 'PRIMARY_EMAIL_ADDRESS' field.
   * @param value the value to set.
   */
  public void setPRIMARYEMAILADDRESS(java.lang.CharSequence value) {
    this.PRIMARY_EMAIL_ADDRESS = value;
  }

  /**
   * Gets the value of the 'ANNUAL_INCOME' field.
   * @return The value of the 'ANNUAL_INCOME' field.
   */
  public java.lang.CharSequence getANNUALINCOME() {
    return ANNUAL_INCOME;
  }

  /**
   * Sets the value of the 'ANNUAL_INCOME' field.
   * @param value the value to set.
   */
  public void setANNUALINCOME(java.lang.CharSequence value) {
    this.ANNUAL_INCOME = value;
  }

  /**
   * Gets the value of the 'INSRT_TS' field.
   * @return The value of the 'INSRT_TS' field.
   */
  public java.lang.CharSequence getINSRTTS() {
    return INSRT_TS;
  }

  /**
   * Sets the value of the 'INSRT_TS' field.
   * @param value the value to set.
   */
  public void setINSRTTS(java.lang.CharSequence value) {
    this.INSRT_TS = value;
  }

  /**
   * Gets the value of the 'CHNG_TS' field.
   * @return The value of the 'CHNG_TS' field.
   */
  public java.lang.CharSequence getCHNGTS() {
    return CHNG_TS;
  }

  /**
   * Sets the value of the 'CHNG_TS' field.
   * @param value the value to set.
   */
  public void setCHNGTS(java.lang.CharSequence value) {
    this.CHNG_TS = value;
  }

  /**
   * Gets the value of the 'INSRT_USR_ID' field.
   * @return The value of the 'INSRT_USR_ID' field.
   */
  public java.lang.CharSequence getINSRTUSRID() {
    return INSRT_USR_ID;
  }

  /**
   * Sets the value of the 'INSRT_USR_ID' field.
   * @param value the value to set.
   */
  public void setINSRTUSRID(java.lang.CharSequence value) {
    this.INSRT_USR_ID = value;
  }

  /**
   * Gets the value of the 'CHNG_USR_ID' field.
   * @return The value of the 'CHNG_USR_ID' field.
   */
  public java.lang.CharSequence getCHNGUSRID() {
    return CHNG_USR_ID;
  }

  /**
   * Sets the value of the 'CHNG_USR_ID' field.
   * @param value the value to set.
   */
  public void setCHNGUSRID(java.lang.CharSequence value) {
    this.CHNG_USR_ID = value;
  }

  /**
   * Gets the value of the 'ACTIVE_FLAG' field.
   * @return The value of the 'ACTIVE_FLAG' field.
   */
  public java.lang.Integer getACTIVEFLAG() {
    return ACTIVE_FLAG;
  }

  /**
   * Sets the value of the 'ACTIVE_FLAG' field.
   * @param value the value to set.
   */
  public void setACTIVEFLAG(java.lang.Integer value) {
    this.ACTIVE_FLAG = value;
  }

  /**
   * Gets the value of the 'KYC_VERIFICATION_VENDOR' field.
   * @return The value of the 'KYC_VERIFICATION_VENDOR' field.
   */
  public java.lang.CharSequence getKYCVERIFICATIONVENDOR() {
    return KYC_VERIFICATION_VENDOR;
  }

  /**
   * Sets the value of the 'KYC_VERIFICATION_VENDOR' field.
   * @param value the value to set.
   */
  public void setKYCVERIFICATIONVENDOR(java.lang.CharSequence value) {
    this.KYC_VERIFICATION_VENDOR = value;
  }

  /**
   * Gets the value of the 'KYC_VERIFICATION_STATUS' field.
   * @return The value of the 'KYC_VERIFICATION_STATUS' field.
   */
  public java.lang.CharSequence getKYCVERIFICATIONSTATUS() {
    return KYC_VERIFICATION_STATUS;
  }

  /**
   * Sets the value of the 'KYC_VERIFICATION_STATUS' field.
   * @param value the value to set.
   */
  public void setKYCVERIFICATIONSTATUS(java.lang.CharSequence value) {
    this.KYC_VERIFICATION_STATUS = value;
  }

  /**
   * Gets the value of the 'KYC_REASON_CODE_1' field.
   * @return The value of the 'KYC_REASON_CODE_1' field.
   */
  public java.lang.CharSequence getKYCREASONCODE1() {
    return KYC_REASON_CODE_1;
  }

  /**
   * Sets the value of the 'KYC_REASON_CODE_1' field.
   * @param value the value to set.
   */
  public void setKYCREASONCODE1(java.lang.CharSequence value) {
    this.KYC_REASON_CODE_1 = value;
  }

  /**
   * Gets the value of the 'KYC_REASON_CODE_2' field.
   * @return The value of the 'KYC_REASON_CODE_2' field.
   */
  public java.lang.CharSequence getKYCREASONCODE2() {
    return KYC_REASON_CODE_2;
  }

  /**
   * Sets the value of the 'KYC_REASON_CODE_2' field.
   * @param value the value to set.
   */
  public void setKYCREASONCODE2(java.lang.CharSequence value) {
    this.KYC_REASON_CODE_2 = value;
  }

  /**
   * Gets the value of the 'KCY_REASON_CODE_3' field.
   * @return The value of the 'KCY_REASON_CODE_3' field.
   */
  public java.lang.CharSequence getKCYREASONCODE3() {
    return KCY_REASON_CODE_3;
  }

  /**
   * Sets the value of the 'KCY_REASON_CODE_3' field.
   * @param value the value to set.
   */
  public void setKCYREASONCODE3(java.lang.CharSequence value) {
    this.KCY_REASON_CODE_3 = value;
  }

  /**
   * Gets the value of the 'KYC_REASON_CODE_4' field.
   * @return The value of the 'KYC_REASON_CODE_4' field.
   */
  public java.lang.CharSequence getKYCREASONCODE4() {
    return KYC_REASON_CODE_4;
  }

  /**
   * Sets the value of the 'KYC_REASON_CODE_4' field.
   * @param value the value to set.
   */
  public void setKYCREASONCODE4(java.lang.CharSequence value) {
    this.KYC_REASON_CODE_4 = value;
  }

  /**
   * Gets the value of the 'ANNUAL_INCOME_AMOUNT' field.
   * @return The value of the 'ANNUAL_INCOME_AMOUNT' field.
   */
  public java.lang.CharSequence getANNUALINCOMEAMOUNT() {
    return ANNUAL_INCOME_AMOUNT;
  }

  /**
   * Sets the value of the 'ANNUAL_INCOME_AMOUNT' field.
   * @param value the value to set.
   */
  public void setANNUALINCOMEAMOUNT(java.lang.CharSequence value) {
    this.ANNUAL_INCOME_AMOUNT = value;
  }

  /**
   * Gets the value of the 'PRIMARY_APPLICANT_SIGNED' field.
   * @return The value of the 'PRIMARY_APPLICANT_SIGNED' field.
   */
  public java.lang.Integer getPRIMARYAPPLICANTSIGNED() {
    return PRIMARY_APPLICANT_SIGNED;
  }

  /**
   * Sets the value of the 'PRIMARY_APPLICANT_SIGNED' field.
   * @param value the value to set.
   */
  public void setPRIMARYAPPLICANTSIGNED(java.lang.Integer value) {
    this.PRIMARY_APPLICANT_SIGNED = value;
  }

  /**
   * Gets the value of the 'EMAIL_PREFERENCE_FLAG' field.
   * @return The value of the 'EMAIL_PREFERENCE_FLAG' field.
   */
  public java.lang.Integer getEMAILPREFERENCEFLAG() {
    return EMAIL_PREFERENCE_FLAG;
  }

  /**
   * Sets the value of the 'EMAIL_PREFERENCE_FLAG' field.
   * @param value the value to set.
   */
  public void setEMAILPREFERENCEFLAG(java.lang.Integer value) {
    this.EMAIL_PREFERENCE_FLAG = value;
  }

  /**
   * Gets the value of the 'DL_NUMBER' field.
   * @return The value of the 'DL_NUMBER' field.
   */
  public java.lang.CharSequence getDLNUMBER() {
    return DL_NUMBER;
  }

  /**
   * Sets the value of the 'DL_NUMBER' field.
   * @param value the value to set.
   */
  public void setDLNUMBER(java.lang.CharSequence value) {
    this.DL_NUMBER = value;
  }

  /**
   * Gets the value of the 'DL_ISSUANCE_STATE' field.
   * @return The value of the 'DL_ISSUANCE_STATE' field.
   */
  public java.lang.CharSequence getDLISSUANCESTATE() {
    return DL_ISSUANCE_STATE;
  }

  /**
   * Sets the value of the 'DL_ISSUANCE_STATE' field.
   * @param value the value to set.
   */
  public void setDLISSUANCESTATE(java.lang.CharSequence value) {
    this.DL_ISSUANCE_STATE = value;
  }

  /**
   * Gets the value of the 'DL_NAME_CHANGED' field.
   * @return The value of the 'DL_NAME_CHANGED' field.
   */
  public java.lang.Integer getDLNAMECHANGED() {
    return DL_NAME_CHANGED;
  }

  /**
   * Sets the value of the 'DL_NAME_CHANGED' field.
   * @param value the value to set.
   */
  public void setDLNAMECHANGED(java.lang.Integer value) {
    this.DL_NAME_CHANGED = value;
  }

  /**
   * Gets the value of the 'DL_DATE_OF_BIRTH_CHANGED' field.
   * @return The value of the 'DL_DATE_OF_BIRTH_CHANGED' field.
   */
  public java.lang.Integer getDLDATEOFBIRTHCHANGED() {
    return DL_DATE_OF_BIRTH_CHANGED;
  }

  /**
   * Sets the value of the 'DL_DATE_OF_BIRTH_CHANGED' field.
   * @param value the value to set.
   */
  public void setDLDATEOFBIRTHCHANGED(java.lang.Integer value) {
    this.DL_DATE_OF_BIRTH_CHANGED = value;
  }

  /**
   * Gets the value of the 'DL_ORIGINAL_ADDRESS_SOURCE' field.
   * @return The value of the 'DL_ORIGINAL_ADDRESS_SOURCE' field.
   */
  public java.lang.CharSequence getDLORIGINALADDRESSSOURCE() {
    return DL_ORIGINAL_ADDRESS_SOURCE;
  }

  /**
   * Sets the value of the 'DL_ORIGINAL_ADDRESS_SOURCE' field.
   * @param value the value to set.
   */
  public void setDLORIGINALADDRESSSOURCE(java.lang.CharSequence value) {
    this.DL_ORIGINAL_ADDRESS_SOURCE = value;
  }

  /**
   * Gets the value of the 'DL_ADDRESS_CHANGED' field.
   * @return The value of the 'DL_ADDRESS_CHANGED' field.
   */
  public java.lang.Integer getDLADDRESSCHANGED() {
    return DL_ADDRESS_CHANGED;
  }

  /**
   * Sets the value of the 'DL_ADDRESS_CHANGED' field.
   * @param value the value to set.
   */
  public void setDLADDRESSCHANGED(java.lang.Integer value) {
    this.DL_ADDRESS_CHANGED = value;
  }

  /**
   * Gets the value of the 'DL_ISSUE_DATE' field.
   * @return The value of the 'DL_ISSUE_DATE' field.
   */
  public java.lang.CharSequence getDLISSUEDATE() {
    return DL_ISSUE_DATE;
  }

  /**
   * Sets the value of the 'DL_ISSUE_DATE' field.
   * @param value the value to set.
   */
  public void setDLISSUEDATE(java.lang.CharSequence value) {
    this.DL_ISSUE_DATE = value;
  }

  /**
   * Gets the value of the 'DL_EXPIRATION_DATE' field.
   * @return The value of the 'DL_EXPIRATION_DATE' field.
   */
  public java.lang.CharSequence getDLEXPIRATIONDATE() {
    return DL_EXPIRATION_DATE;
  }

  /**
   * Sets the value of the 'DL_EXPIRATION_DATE' field.
   * @param value the value to set.
   */
  public void setDLEXPIRATIONDATE(java.lang.CharSequence value) {
    this.DL_EXPIRATION_DATE = value;
  }

  /**
   * Gets the value of the 'DL_ENTRY_FORMAT_FAILED' field.
   * @return The value of the 'DL_ENTRY_FORMAT_FAILED' field.
   */
  public java.lang.CharSequence getDLENTRYFORMATFAILED() {
    return DL_ENTRY_FORMAT_FAILED;
  }

  /**
   * Sets the value of the 'DL_ENTRY_FORMAT_FAILED' field.
   * @param value the value to set.
   */
  public void setDLENTRYFORMATFAILED(java.lang.CharSequence value) {
    this.DL_ENTRY_FORMAT_FAILED = value;
  }

  /**
   * Gets the value of the 'DL_SWIPE_RESPONSE_CODE' field.
   * @return The value of the 'DL_SWIPE_RESPONSE_CODE' field.
   */
  public java.lang.Integer getDLSWIPERESPONSECODE() {
    return DL_SWIPE_RESPONSE_CODE;
  }

  /**
   * Sets the value of the 'DL_SWIPE_RESPONSE_CODE' field.
   * @param value the value to set.
   */
  public void setDLSWIPERESPONSECODE(java.lang.Integer value) {
    this.DL_SWIPE_RESPONSE_CODE = value;
  }

  /**
   * Gets the value of the 'DL_SWIPE_METHOD_INDICATOR' field.
   * @return The value of the 'DL_SWIPE_METHOD_INDICATOR' field.
   */
  public java.lang.CharSequence getDLSWIPEMETHODINDICATOR() {
    return DL_SWIPE_METHOD_INDICATOR;
  }

  /**
   * Sets the value of the 'DL_SWIPE_METHOD_INDICATOR' field.
   * @param value the value to set.
   */
  public void setDLSWIPEMETHODINDICATOR(java.lang.CharSequence value) {
    this.DL_SWIPE_METHOD_INDICATOR = value;
  }

  /**
   * Gets the value of the 'DL_QUALIFYING_CARD_TYPE' field.
   * @return The value of the 'DL_QUALIFYING_CARD_TYPE' field.
   */
  public java.lang.CharSequence getDLQUALIFYINGCARDTYPE() {
    return DL_QUALIFYING_CARD_TYPE;
  }

  /**
   * Sets the value of the 'DL_QUALIFYING_CARD_TYPE' field.
   * @param value the value to set.
   */
  public void setDLQUALIFYINGCARDTYPE(java.lang.CharSequence value) {
    this.DL_QUALIFYING_CARD_TYPE = value;
  }

  /**
   * Gets the value of the 'DL_QUALIFYING_CARD_BYPASSED' field.
   * @return The value of the 'DL_QUALIFYING_CARD_BYPASSED' field.
   */
  public java.lang.CharSequence getDLQUALIFYINGCARDBYPASSED() {
    return DL_QUALIFYING_CARD_BYPASSED;
  }

  /**
   * Sets the value of the 'DL_QUALIFYING_CARD_BYPASSED' field.
   * @param value the value to set.
   */
  public void setDLQUALIFYINGCARDBYPASSED(java.lang.CharSequence value) {
    this.DL_QUALIFYING_CARD_BYPASSED = value;
  }

  /**
   * Gets the value of the 'REFERENCE_ID' field.
   * @return The value of the 'REFERENCE_ID' field.
   */
  public java.lang.CharSequence getREFERENCEID() {
    return REFERENCE_ID;
  }

  /**
   * Sets the value of the 'REFERENCE_ID' field.
   * @param value the value to set.
   */
  public void setREFERENCEID(java.lang.CharSequence value) {
    this.REFERENCE_ID = value;
  }

  /**
   * Creates a new legalentity RecordBuilder.
   * @return A new legalentity RecordBuilder
   */
  public static com.kafka.avro.legalentity.Builder newBuilder() {
    return new com.kafka.avro.legalentity.Builder();
  }

  /**
   * Creates a new legalentity RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new legalentity RecordBuilder
   */
  public static com.kafka.avro.legalentity.Builder newBuilder(com.kafka.avro.legalentity.Builder other) {
    return new com.kafka.avro.legalentity.Builder(other);
  }

  /**
   * Creates a new legalentity RecordBuilder by copying an existing legalentity instance.
   * @param other The existing instance to copy.
   * @return A new legalentity RecordBuilder
   */
  public static com.kafka.avro.legalentity.Builder newBuilder(com.kafka.avro.legalentity other) {
    return new com.kafka.avro.legalentity.Builder(other);
  }

  /**
   * RecordBuilder for legalentity instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<legalentity>
    implements org.apache.avro.data.RecordBuilder<legalentity> {

    private java.lang.CharSequence LEGAL_ENTITY_ID;
    private java.lang.CharSequence APPLICATION_ID;
    private java.lang.CharSequence LEGAL_ENTITY_TYPE_CD;
    private java.lang.CharSequence TAX_ID;
    private java.lang.CharSequence PRIMARY_EMAIL_ADDRESS;
    private java.lang.CharSequence ANNUAL_INCOME;
    private java.lang.CharSequence INSRT_TS;
    private java.lang.CharSequence CHNG_TS;
    private java.lang.CharSequence INSRT_USR_ID;
    private java.lang.CharSequence CHNG_USR_ID;
    private int ACTIVE_FLAG;
    private java.lang.CharSequence KYC_VERIFICATION_VENDOR;
    private java.lang.CharSequence KYC_VERIFICATION_STATUS;
    private java.lang.CharSequence KYC_REASON_CODE_1;
    private java.lang.CharSequence KYC_REASON_CODE_2;
    private java.lang.CharSequence KCY_REASON_CODE_3;
    private java.lang.CharSequence KYC_REASON_CODE_4;
    private java.lang.CharSequence ANNUAL_INCOME_AMOUNT;
    private int PRIMARY_APPLICANT_SIGNED;
    private int EMAIL_PREFERENCE_FLAG;
    private java.lang.CharSequence DL_NUMBER;
    private java.lang.CharSequence DL_ISSUANCE_STATE;
    private int DL_NAME_CHANGED;
    private int DL_DATE_OF_BIRTH_CHANGED;
    private java.lang.CharSequence DL_ORIGINAL_ADDRESS_SOURCE;
    private int DL_ADDRESS_CHANGED;
    private java.lang.CharSequence DL_ISSUE_DATE;
    private java.lang.CharSequence DL_EXPIRATION_DATE;
    private java.lang.CharSequence DL_ENTRY_FORMAT_FAILED;
    private int DL_SWIPE_RESPONSE_CODE;
    private java.lang.CharSequence DL_SWIPE_METHOD_INDICATOR;
    private java.lang.CharSequence DL_QUALIFYING_CARD_TYPE;
    private java.lang.CharSequence DL_QUALIFYING_CARD_BYPASSED;
    private java.lang.CharSequence REFERENCE_ID;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kafka.avro.legalentity.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.LEGAL_ENTITY_ID)) {
        this.LEGAL_ENTITY_ID = data().deepCopy(fields()[0].schema(), other.LEGAL_ENTITY_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.APPLICATION_ID)) {
        this.APPLICATION_ID = data().deepCopy(fields()[1].schema(), other.APPLICATION_ID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.LEGAL_ENTITY_TYPE_CD)) {
        this.LEGAL_ENTITY_TYPE_CD = data().deepCopy(fields()[2].schema(), other.LEGAL_ENTITY_TYPE_CD);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.TAX_ID)) {
        this.TAX_ID = data().deepCopy(fields()[3].schema(), other.TAX_ID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PRIMARY_EMAIL_ADDRESS)) {
        this.PRIMARY_EMAIL_ADDRESS = data().deepCopy(fields()[4].schema(), other.PRIMARY_EMAIL_ADDRESS);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ANNUAL_INCOME)) {
        this.ANNUAL_INCOME = data().deepCopy(fields()[5].schema(), other.ANNUAL_INCOME);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.INSRT_TS)) {
        this.INSRT_TS = data().deepCopy(fields()[6].schema(), other.INSRT_TS);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CHNG_TS)) {
        this.CHNG_TS = data().deepCopy(fields()[7].schema(), other.CHNG_TS);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.INSRT_USR_ID)) {
        this.INSRT_USR_ID = data().deepCopy(fields()[8].schema(), other.INSRT_USR_ID);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.CHNG_USR_ID)) {
        this.CHNG_USR_ID = data().deepCopy(fields()[9].schema(), other.CHNG_USR_ID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ACTIVE_FLAG)) {
        this.ACTIVE_FLAG = data().deepCopy(fields()[10].schema(), other.ACTIVE_FLAG);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.KYC_VERIFICATION_VENDOR)) {
        this.KYC_VERIFICATION_VENDOR = data().deepCopy(fields()[11].schema(), other.KYC_VERIFICATION_VENDOR);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.KYC_VERIFICATION_STATUS)) {
        this.KYC_VERIFICATION_STATUS = data().deepCopy(fields()[12].schema(), other.KYC_VERIFICATION_STATUS);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.KYC_REASON_CODE_1)) {
        this.KYC_REASON_CODE_1 = data().deepCopy(fields()[13].schema(), other.KYC_REASON_CODE_1);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.KYC_REASON_CODE_2)) {
        this.KYC_REASON_CODE_2 = data().deepCopy(fields()[14].schema(), other.KYC_REASON_CODE_2);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.KCY_REASON_CODE_3)) {
        this.KCY_REASON_CODE_3 = data().deepCopy(fields()[15].schema(), other.KCY_REASON_CODE_3);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.KYC_REASON_CODE_4)) {
        this.KYC_REASON_CODE_4 = data().deepCopy(fields()[16].schema(), other.KYC_REASON_CODE_4);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ANNUAL_INCOME_AMOUNT)) {
        this.ANNUAL_INCOME_AMOUNT = data().deepCopy(fields()[17].schema(), other.ANNUAL_INCOME_AMOUNT);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.PRIMARY_APPLICANT_SIGNED)) {
        this.PRIMARY_APPLICANT_SIGNED = data().deepCopy(fields()[18].schema(), other.PRIMARY_APPLICANT_SIGNED);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.EMAIL_PREFERENCE_FLAG)) {
        this.EMAIL_PREFERENCE_FLAG = data().deepCopy(fields()[19].schema(), other.EMAIL_PREFERENCE_FLAG);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.DL_NUMBER)) {
        this.DL_NUMBER = data().deepCopy(fields()[20].schema(), other.DL_NUMBER);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.DL_ISSUANCE_STATE)) {
        this.DL_ISSUANCE_STATE = data().deepCopy(fields()[21].schema(), other.DL_ISSUANCE_STATE);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.DL_NAME_CHANGED)) {
        this.DL_NAME_CHANGED = data().deepCopy(fields()[22].schema(), other.DL_NAME_CHANGED);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.DL_DATE_OF_BIRTH_CHANGED)) {
        this.DL_DATE_OF_BIRTH_CHANGED = data().deepCopy(fields()[23].schema(), other.DL_DATE_OF_BIRTH_CHANGED);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.DL_ORIGINAL_ADDRESS_SOURCE)) {
        this.DL_ORIGINAL_ADDRESS_SOURCE = data().deepCopy(fields()[24].schema(), other.DL_ORIGINAL_ADDRESS_SOURCE);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.DL_ADDRESS_CHANGED)) {
        this.DL_ADDRESS_CHANGED = data().deepCopy(fields()[25].schema(), other.DL_ADDRESS_CHANGED);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.DL_ISSUE_DATE)) {
        this.DL_ISSUE_DATE = data().deepCopy(fields()[26].schema(), other.DL_ISSUE_DATE);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.DL_EXPIRATION_DATE)) {
        this.DL_EXPIRATION_DATE = data().deepCopy(fields()[27].schema(), other.DL_EXPIRATION_DATE);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.DL_ENTRY_FORMAT_FAILED)) {
        this.DL_ENTRY_FORMAT_FAILED = data().deepCopy(fields()[28].schema(), other.DL_ENTRY_FORMAT_FAILED);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.DL_SWIPE_RESPONSE_CODE)) {
        this.DL_SWIPE_RESPONSE_CODE = data().deepCopy(fields()[29].schema(), other.DL_SWIPE_RESPONSE_CODE);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.DL_SWIPE_METHOD_INDICATOR)) {
        this.DL_SWIPE_METHOD_INDICATOR = data().deepCopy(fields()[30].schema(), other.DL_SWIPE_METHOD_INDICATOR);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.DL_QUALIFYING_CARD_TYPE)) {
        this.DL_QUALIFYING_CARD_TYPE = data().deepCopy(fields()[31].schema(), other.DL_QUALIFYING_CARD_TYPE);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.DL_QUALIFYING_CARD_BYPASSED)) {
        this.DL_QUALIFYING_CARD_BYPASSED = data().deepCopy(fields()[32].schema(), other.DL_QUALIFYING_CARD_BYPASSED);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.REFERENCE_ID)) {
        this.REFERENCE_ID = data().deepCopy(fields()[33].schema(), other.REFERENCE_ID);
        fieldSetFlags()[33] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing legalentity instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kafka.avro.legalentity other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.LEGAL_ENTITY_ID)) {
        this.LEGAL_ENTITY_ID = data().deepCopy(fields()[0].schema(), other.LEGAL_ENTITY_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.APPLICATION_ID)) {
        this.APPLICATION_ID = data().deepCopy(fields()[1].schema(), other.APPLICATION_ID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.LEGAL_ENTITY_TYPE_CD)) {
        this.LEGAL_ENTITY_TYPE_CD = data().deepCopy(fields()[2].schema(), other.LEGAL_ENTITY_TYPE_CD);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.TAX_ID)) {
        this.TAX_ID = data().deepCopy(fields()[3].schema(), other.TAX_ID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PRIMARY_EMAIL_ADDRESS)) {
        this.PRIMARY_EMAIL_ADDRESS = data().deepCopy(fields()[4].schema(), other.PRIMARY_EMAIL_ADDRESS);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ANNUAL_INCOME)) {
        this.ANNUAL_INCOME = data().deepCopy(fields()[5].schema(), other.ANNUAL_INCOME);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.INSRT_TS)) {
        this.INSRT_TS = data().deepCopy(fields()[6].schema(), other.INSRT_TS);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CHNG_TS)) {
        this.CHNG_TS = data().deepCopy(fields()[7].schema(), other.CHNG_TS);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.INSRT_USR_ID)) {
        this.INSRT_USR_ID = data().deepCopy(fields()[8].schema(), other.INSRT_USR_ID);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.CHNG_USR_ID)) {
        this.CHNG_USR_ID = data().deepCopy(fields()[9].schema(), other.CHNG_USR_ID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ACTIVE_FLAG)) {
        this.ACTIVE_FLAG = data().deepCopy(fields()[10].schema(), other.ACTIVE_FLAG);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.KYC_VERIFICATION_VENDOR)) {
        this.KYC_VERIFICATION_VENDOR = data().deepCopy(fields()[11].schema(), other.KYC_VERIFICATION_VENDOR);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.KYC_VERIFICATION_STATUS)) {
        this.KYC_VERIFICATION_STATUS = data().deepCopy(fields()[12].schema(), other.KYC_VERIFICATION_STATUS);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.KYC_REASON_CODE_1)) {
        this.KYC_REASON_CODE_1 = data().deepCopy(fields()[13].schema(), other.KYC_REASON_CODE_1);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.KYC_REASON_CODE_2)) {
        this.KYC_REASON_CODE_2 = data().deepCopy(fields()[14].schema(), other.KYC_REASON_CODE_2);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.KCY_REASON_CODE_3)) {
        this.KCY_REASON_CODE_3 = data().deepCopy(fields()[15].schema(), other.KCY_REASON_CODE_3);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.KYC_REASON_CODE_4)) {
        this.KYC_REASON_CODE_4 = data().deepCopy(fields()[16].schema(), other.KYC_REASON_CODE_4);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ANNUAL_INCOME_AMOUNT)) {
        this.ANNUAL_INCOME_AMOUNT = data().deepCopy(fields()[17].schema(), other.ANNUAL_INCOME_AMOUNT);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.PRIMARY_APPLICANT_SIGNED)) {
        this.PRIMARY_APPLICANT_SIGNED = data().deepCopy(fields()[18].schema(), other.PRIMARY_APPLICANT_SIGNED);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.EMAIL_PREFERENCE_FLAG)) {
        this.EMAIL_PREFERENCE_FLAG = data().deepCopy(fields()[19].schema(), other.EMAIL_PREFERENCE_FLAG);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.DL_NUMBER)) {
        this.DL_NUMBER = data().deepCopy(fields()[20].schema(), other.DL_NUMBER);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.DL_ISSUANCE_STATE)) {
        this.DL_ISSUANCE_STATE = data().deepCopy(fields()[21].schema(), other.DL_ISSUANCE_STATE);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.DL_NAME_CHANGED)) {
        this.DL_NAME_CHANGED = data().deepCopy(fields()[22].schema(), other.DL_NAME_CHANGED);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.DL_DATE_OF_BIRTH_CHANGED)) {
        this.DL_DATE_OF_BIRTH_CHANGED = data().deepCopy(fields()[23].schema(), other.DL_DATE_OF_BIRTH_CHANGED);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.DL_ORIGINAL_ADDRESS_SOURCE)) {
        this.DL_ORIGINAL_ADDRESS_SOURCE = data().deepCopy(fields()[24].schema(), other.DL_ORIGINAL_ADDRESS_SOURCE);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.DL_ADDRESS_CHANGED)) {
        this.DL_ADDRESS_CHANGED = data().deepCopy(fields()[25].schema(), other.DL_ADDRESS_CHANGED);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.DL_ISSUE_DATE)) {
        this.DL_ISSUE_DATE = data().deepCopy(fields()[26].schema(), other.DL_ISSUE_DATE);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.DL_EXPIRATION_DATE)) {
        this.DL_EXPIRATION_DATE = data().deepCopy(fields()[27].schema(), other.DL_EXPIRATION_DATE);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.DL_ENTRY_FORMAT_FAILED)) {
        this.DL_ENTRY_FORMAT_FAILED = data().deepCopy(fields()[28].schema(), other.DL_ENTRY_FORMAT_FAILED);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.DL_SWIPE_RESPONSE_CODE)) {
        this.DL_SWIPE_RESPONSE_CODE = data().deepCopy(fields()[29].schema(), other.DL_SWIPE_RESPONSE_CODE);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.DL_SWIPE_METHOD_INDICATOR)) {
        this.DL_SWIPE_METHOD_INDICATOR = data().deepCopy(fields()[30].schema(), other.DL_SWIPE_METHOD_INDICATOR);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.DL_QUALIFYING_CARD_TYPE)) {
        this.DL_QUALIFYING_CARD_TYPE = data().deepCopy(fields()[31].schema(), other.DL_QUALIFYING_CARD_TYPE);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.DL_QUALIFYING_CARD_BYPASSED)) {
        this.DL_QUALIFYING_CARD_BYPASSED = data().deepCopy(fields()[32].schema(), other.DL_QUALIFYING_CARD_BYPASSED);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.REFERENCE_ID)) {
        this.REFERENCE_ID = data().deepCopy(fields()[33].schema(), other.REFERENCE_ID);
        fieldSetFlags()[33] = true;
      }
    }

    /**
      * Gets the value of the 'LEGAL_ENTITY_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getLEGALENTITYID() {
      return LEGAL_ENTITY_ID;
    }

    /**
      * Sets the value of the 'LEGAL_ENTITY_ID' field.
      * @param value The value of 'LEGAL_ENTITY_ID'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setLEGALENTITYID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.LEGAL_ENTITY_ID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'LEGAL_ENTITY_ID' field has been set.
      * @return True if the 'LEGAL_ENTITY_ID' field has been set, false otherwise.
      */
    public boolean hasLEGALENTITYID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'LEGAL_ENTITY_ID' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearLEGALENTITYID() {
      LEGAL_ENTITY_ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'APPLICATION_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getAPPLICATIONID() {
      return APPLICATION_ID;
    }

    /**
      * Sets the value of the 'APPLICATION_ID' field.
      * @param value The value of 'APPLICATION_ID'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setAPPLICATIONID(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.APPLICATION_ID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'APPLICATION_ID' field has been set.
      * @return True if the 'APPLICATION_ID' field has been set, false otherwise.
      */
    public boolean hasAPPLICATIONID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'APPLICATION_ID' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearAPPLICATIONID() {
      APPLICATION_ID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'LEGAL_ENTITY_TYPE_CD' field.
      * @return The value.
      */
    public java.lang.CharSequence getLEGALENTITYTYPECD() {
      return LEGAL_ENTITY_TYPE_CD;
    }

    /**
      * Sets the value of the 'LEGAL_ENTITY_TYPE_CD' field.
      * @param value The value of 'LEGAL_ENTITY_TYPE_CD'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setLEGALENTITYTYPECD(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.LEGAL_ENTITY_TYPE_CD = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'LEGAL_ENTITY_TYPE_CD' field has been set.
      * @return True if the 'LEGAL_ENTITY_TYPE_CD' field has been set, false otherwise.
      */
    public boolean hasLEGALENTITYTYPECD() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'LEGAL_ENTITY_TYPE_CD' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearLEGALENTITYTYPECD() {
      LEGAL_ENTITY_TYPE_CD = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'TAX_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getTAXID() {
      return TAX_ID;
    }

    /**
      * Sets the value of the 'TAX_ID' field.
      * @param value The value of 'TAX_ID'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setTAXID(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.TAX_ID = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'TAX_ID' field has been set.
      * @return True if the 'TAX_ID' field has been set, false otherwise.
      */
    public boolean hasTAXID() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'TAX_ID' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearTAXID() {
      TAX_ID = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'PRIMARY_EMAIL_ADDRESS' field.
      * @return The value.
      */
    public java.lang.CharSequence getPRIMARYEMAILADDRESS() {
      return PRIMARY_EMAIL_ADDRESS;
    }

    /**
      * Sets the value of the 'PRIMARY_EMAIL_ADDRESS' field.
      * @param value The value of 'PRIMARY_EMAIL_ADDRESS'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setPRIMARYEMAILADDRESS(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.PRIMARY_EMAIL_ADDRESS = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'PRIMARY_EMAIL_ADDRESS' field has been set.
      * @return True if the 'PRIMARY_EMAIL_ADDRESS' field has been set, false otherwise.
      */
    public boolean hasPRIMARYEMAILADDRESS() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'PRIMARY_EMAIL_ADDRESS' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearPRIMARYEMAILADDRESS() {
      PRIMARY_EMAIL_ADDRESS = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ANNUAL_INCOME' field.
      * @return The value.
      */
    public java.lang.CharSequence getANNUALINCOME() {
      return ANNUAL_INCOME;
    }

    /**
      * Sets the value of the 'ANNUAL_INCOME' field.
      * @param value The value of 'ANNUAL_INCOME'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setANNUALINCOME(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.ANNUAL_INCOME = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ANNUAL_INCOME' field has been set.
      * @return True if the 'ANNUAL_INCOME' field has been set, false otherwise.
      */
    public boolean hasANNUALINCOME() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ANNUAL_INCOME' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearANNUALINCOME() {
      ANNUAL_INCOME = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'INSRT_TS' field.
      * @return The value.
      */
    public java.lang.CharSequence getINSRTTS() {
      return INSRT_TS;
    }

    /**
      * Sets the value of the 'INSRT_TS' field.
      * @param value The value of 'INSRT_TS'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setINSRTTS(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.INSRT_TS = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'INSRT_TS' field has been set.
      * @return True if the 'INSRT_TS' field has been set, false otherwise.
      */
    public boolean hasINSRTTS() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'INSRT_TS' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearINSRTTS() {
      INSRT_TS = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'CHNG_TS' field.
      * @return The value.
      */
    public java.lang.CharSequence getCHNGTS() {
      return CHNG_TS;
    }

    /**
      * Sets the value of the 'CHNG_TS' field.
      * @param value The value of 'CHNG_TS'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setCHNGTS(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.CHNG_TS = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'CHNG_TS' field has been set.
      * @return True if the 'CHNG_TS' field has been set, false otherwise.
      */
    public boolean hasCHNGTS() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'CHNG_TS' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearCHNGTS() {
      CHNG_TS = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'INSRT_USR_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getINSRTUSRID() {
      return INSRT_USR_ID;
    }

    /**
      * Sets the value of the 'INSRT_USR_ID' field.
      * @param value The value of 'INSRT_USR_ID'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setINSRTUSRID(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.INSRT_USR_ID = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'INSRT_USR_ID' field has been set.
      * @return True if the 'INSRT_USR_ID' field has been set, false otherwise.
      */
    public boolean hasINSRTUSRID() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'INSRT_USR_ID' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearINSRTUSRID() {
      INSRT_USR_ID = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'CHNG_USR_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getCHNGUSRID() {
      return CHNG_USR_ID;
    }

    /**
      * Sets the value of the 'CHNG_USR_ID' field.
      * @param value The value of 'CHNG_USR_ID'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setCHNGUSRID(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.CHNG_USR_ID = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'CHNG_USR_ID' field has been set.
      * @return True if the 'CHNG_USR_ID' field has been set, false otherwise.
      */
    public boolean hasCHNGUSRID() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'CHNG_USR_ID' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearCHNGUSRID() {
      CHNG_USR_ID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ACTIVE_FLAG' field.
      * @return The value.
      */
    public java.lang.Integer getACTIVEFLAG() {
      return ACTIVE_FLAG;
    }

    /**
      * Sets the value of the 'ACTIVE_FLAG' field.
      * @param value The value of 'ACTIVE_FLAG'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setACTIVEFLAG(int value) {
      validate(fields()[10], value);
      this.ACTIVE_FLAG = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ACTIVE_FLAG' field has been set.
      * @return True if the 'ACTIVE_FLAG' field has been set, false otherwise.
      */
    public boolean hasACTIVEFLAG() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ACTIVE_FLAG' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearACTIVEFLAG() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'KYC_VERIFICATION_VENDOR' field.
      * @return The value.
      */
    public java.lang.CharSequence getKYCVERIFICATIONVENDOR() {
      return KYC_VERIFICATION_VENDOR;
    }

    /**
      * Sets the value of the 'KYC_VERIFICATION_VENDOR' field.
      * @param value The value of 'KYC_VERIFICATION_VENDOR'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setKYCVERIFICATIONVENDOR(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.KYC_VERIFICATION_VENDOR = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'KYC_VERIFICATION_VENDOR' field has been set.
      * @return True if the 'KYC_VERIFICATION_VENDOR' field has been set, false otherwise.
      */
    public boolean hasKYCVERIFICATIONVENDOR() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'KYC_VERIFICATION_VENDOR' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearKYCVERIFICATIONVENDOR() {
      KYC_VERIFICATION_VENDOR = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'KYC_VERIFICATION_STATUS' field.
      * @return The value.
      */
    public java.lang.CharSequence getKYCVERIFICATIONSTATUS() {
      return KYC_VERIFICATION_STATUS;
    }

    /**
      * Sets the value of the 'KYC_VERIFICATION_STATUS' field.
      * @param value The value of 'KYC_VERIFICATION_STATUS'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setKYCVERIFICATIONSTATUS(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.KYC_VERIFICATION_STATUS = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'KYC_VERIFICATION_STATUS' field has been set.
      * @return True if the 'KYC_VERIFICATION_STATUS' field has been set, false otherwise.
      */
    public boolean hasKYCVERIFICATIONSTATUS() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'KYC_VERIFICATION_STATUS' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearKYCVERIFICATIONSTATUS() {
      KYC_VERIFICATION_STATUS = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'KYC_REASON_CODE_1' field.
      * @return The value.
      */
    public java.lang.CharSequence getKYCREASONCODE1() {
      return KYC_REASON_CODE_1;
    }

    /**
      * Sets the value of the 'KYC_REASON_CODE_1' field.
      * @param value The value of 'KYC_REASON_CODE_1'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setKYCREASONCODE1(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.KYC_REASON_CODE_1 = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'KYC_REASON_CODE_1' field has been set.
      * @return True if the 'KYC_REASON_CODE_1' field has been set, false otherwise.
      */
    public boolean hasKYCREASONCODE1() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'KYC_REASON_CODE_1' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearKYCREASONCODE1() {
      KYC_REASON_CODE_1 = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'KYC_REASON_CODE_2' field.
      * @return The value.
      */
    public java.lang.CharSequence getKYCREASONCODE2() {
      return KYC_REASON_CODE_2;
    }

    /**
      * Sets the value of the 'KYC_REASON_CODE_2' field.
      * @param value The value of 'KYC_REASON_CODE_2'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setKYCREASONCODE2(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.KYC_REASON_CODE_2 = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'KYC_REASON_CODE_2' field has been set.
      * @return True if the 'KYC_REASON_CODE_2' field has been set, false otherwise.
      */
    public boolean hasKYCREASONCODE2() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'KYC_REASON_CODE_2' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearKYCREASONCODE2() {
      KYC_REASON_CODE_2 = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'KCY_REASON_CODE_3' field.
      * @return The value.
      */
    public java.lang.CharSequence getKCYREASONCODE3() {
      return KCY_REASON_CODE_3;
    }

    /**
      * Sets the value of the 'KCY_REASON_CODE_3' field.
      * @param value The value of 'KCY_REASON_CODE_3'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setKCYREASONCODE3(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.KCY_REASON_CODE_3 = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'KCY_REASON_CODE_3' field has been set.
      * @return True if the 'KCY_REASON_CODE_3' field has been set, false otherwise.
      */
    public boolean hasKCYREASONCODE3() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'KCY_REASON_CODE_3' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearKCYREASONCODE3() {
      KCY_REASON_CODE_3 = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'KYC_REASON_CODE_4' field.
      * @return The value.
      */
    public java.lang.CharSequence getKYCREASONCODE4() {
      return KYC_REASON_CODE_4;
    }

    /**
      * Sets the value of the 'KYC_REASON_CODE_4' field.
      * @param value The value of 'KYC_REASON_CODE_4'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setKYCREASONCODE4(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.KYC_REASON_CODE_4 = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'KYC_REASON_CODE_4' field has been set.
      * @return True if the 'KYC_REASON_CODE_4' field has been set, false otherwise.
      */
    public boolean hasKYCREASONCODE4() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'KYC_REASON_CODE_4' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearKYCREASONCODE4() {
      KYC_REASON_CODE_4 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'ANNUAL_INCOME_AMOUNT' field.
      * @return The value.
      */
    public java.lang.CharSequence getANNUALINCOMEAMOUNT() {
      return ANNUAL_INCOME_AMOUNT;
    }

    /**
      * Sets the value of the 'ANNUAL_INCOME_AMOUNT' field.
      * @param value The value of 'ANNUAL_INCOME_AMOUNT'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setANNUALINCOMEAMOUNT(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.ANNUAL_INCOME_AMOUNT = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'ANNUAL_INCOME_AMOUNT' field has been set.
      * @return True if the 'ANNUAL_INCOME_AMOUNT' field has been set, false otherwise.
      */
    public boolean hasANNUALINCOMEAMOUNT() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'ANNUAL_INCOME_AMOUNT' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearANNUALINCOMEAMOUNT() {
      ANNUAL_INCOME_AMOUNT = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'PRIMARY_APPLICANT_SIGNED' field.
      * @return The value.
      */
    public java.lang.Integer getPRIMARYAPPLICANTSIGNED() {
      return PRIMARY_APPLICANT_SIGNED;
    }

    /**
      * Sets the value of the 'PRIMARY_APPLICANT_SIGNED' field.
      * @param value The value of 'PRIMARY_APPLICANT_SIGNED'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setPRIMARYAPPLICANTSIGNED(int value) {
      validate(fields()[18], value);
      this.PRIMARY_APPLICANT_SIGNED = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'PRIMARY_APPLICANT_SIGNED' field has been set.
      * @return True if the 'PRIMARY_APPLICANT_SIGNED' field has been set, false otherwise.
      */
    public boolean hasPRIMARYAPPLICANTSIGNED() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'PRIMARY_APPLICANT_SIGNED' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearPRIMARYAPPLICANTSIGNED() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'EMAIL_PREFERENCE_FLAG' field.
      * @return The value.
      */
    public java.lang.Integer getEMAILPREFERENCEFLAG() {
      return EMAIL_PREFERENCE_FLAG;
    }

    /**
      * Sets the value of the 'EMAIL_PREFERENCE_FLAG' field.
      * @param value The value of 'EMAIL_PREFERENCE_FLAG'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setEMAILPREFERENCEFLAG(int value) {
      validate(fields()[19], value);
      this.EMAIL_PREFERENCE_FLAG = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'EMAIL_PREFERENCE_FLAG' field has been set.
      * @return True if the 'EMAIL_PREFERENCE_FLAG' field has been set, false otherwise.
      */
    public boolean hasEMAILPREFERENCEFLAG() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'EMAIL_PREFERENCE_FLAG' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearEMAILPREFERENCEFLAG() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_NUMBER' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLNUMBER() {
      return DL_NUMBER;
    }

    /**
      * Sets the value of the 'DL_NUMBER' field.
      * @param value The value of 'DL_NUMBER'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLNUMBER(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.DL_NUMBER = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_NUMBER' field has been set.
      * @return True if the 'DL_NUMBER' field has been set, false otherwise.
      */
    public boolean hasDLNUMBER() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'DL_NUMBER' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLNUMBER() {
      DL_NUMBER = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_ISSUANCE_STATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLISSUANCESTATE() {
      return DL_ISSUANCE_STATE;
    }

    /**
      * Sets the value of the 'DL_ISSUANCE_STATE' field.
      * @param value The value of 'DL_ISSUANCE_STATE'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLISSUANCESTATE(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.DL_ISSUANCE_STATE = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_ISSUANCE_STATE' field has been set.
      * @return True if the 'DL_ISSUANCE_STATE' field has been set, false otherwise.
      */
    public boolean hasDLISSUANCESTATE() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'DL_ISSUANCE_STATE' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLISSUANCESTATE() {
      DL_ISSUANCE_STATE = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_NAME_CHANGED' field.
      * @return The value.
      */
    public java.lang.Integer getDLNAMECHANGED() {
      return DL_NAME_CHANGED;
    }

    /**
      * Sets the value of the 'DL_NAME_CHANGED' field.
      * @param value The value of 'DL_NAME_CHANGED'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLNAMECHANGED(int value) {
      validate(fields()[22], value);
      this.DL_NAME_CHANGED = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_NAME_CHANGED' field has been set.
      * @return True if the 'DL_NAME_CHANGED' field has been set, false otherwise.
      */
    public boolean hasDLNAMECHANGED() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'DL_NAME_CHANGED' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLNAMECHANGED() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_DATE_OF_BIRTH_CHANGED' field.
      * @return The value.
      */
    public java.lang.Integer getDLDATEOFBIRTHCHANGED() {
      return DL_DATE_OF_BIRTH_CHANGED;
    }

    /**
      * Sets the value of the 'DL_DATE_OF_BIRTH_CHANGED' field.
      * @param value The value of 'DL_DATE_OF_BIRTH_CHANGED'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLDATEOFBIRTHCHANGED(int value) {
      validate(fields()[23], value);
      this.DL_DATE_OF_BIRTH_CHANGED = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_DATE_OF_BIRTH_CHANGED' field has been set.
      * @return True if the 'DL_DATE_OF_BIRTH_CHANGED' field has been set, false otherwise.
      */
    public boolean hasDLDATEOFBIRTHCHANGED() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'DL_DATE_OF_BIRTH_CHANGED' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLDATEOFBIRTHCHANGED() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_ORIGINAL_ADDRESS_SOURCE' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLORIGINALADDRESSSOURCE() {
      return DL_ORIGINAL_ADDRESS_SOURCE;
    }

    /**
      * Sets the value of the 'DL_ORIGINAL_ADDRESS_SOURCE' field.
      * @param value The value of 'DL_ORIGINAL_ADDRESS_SOURCE'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLORIGINALADDRESSSOURCE(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.DL_ORIGINAL_ADDRESS_SOURCE = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_ORIGINAL_ADDRESS_SOURCE' field has been set.
      * @return True if the 'DL_ORIGINAL_ADDRESS_SOURCE' field has been set, false otherwise.
      */
    public boolean hasDLORIGINALADDRESSSOURCE() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'DL_ORIGINAL_ADDRESS_SOURCE' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLORIGINALADDRESSSOURCE() {
      DL_ORIGINAL_ADDRESS_SOURCE = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_ADDRESS_CHANGED' field.
      * @return The value.
      */
    public java.lang.Integer getDLADDRESSCHANGED() {
      return DL_ADDRESS_CHANGED;
    }

    /**
      * Sets the value of the 'DL_ADDRESS_CHANGED' field.
      * @param value The value of 'DL_ADDRESS_CHANGED'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLADDRESSCHANGED(int value) {
      validate(fields()[25], value);
      this.DL_ADDRESS_CHANGED = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_ADDRESS_CHANGED' field has been set.
      * @return True if the 'DL_ADDRESS_CHANGED' field has been set, false otherwise.
      */
    public boolean hasDLADDRESSCHANGED() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'DL_ADDRESS_CHANGED' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLADDRESSCHANGED() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_ISSUE_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLISSUEDATE() {
      return DL_ISSUE_DATE;
    }

    /**
      * Sets the value of the 'DL_ISSUE_DATE' field.
      * @param value The value of 'DL_ISSUE_DATE'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLISSUEDATE(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.DL_ISSUE_DATE = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_ISSUE_DATE' field has been set.
      * @return True if the 'DL_ISSUE_DATE' field has been set, false otherwise.
      */
    public boolean hasDLISSUEDATE() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'DL_ISSUE_DATE' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLISSUEDATE() {
      DL_ISSUE_DATE = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_EXPIRATION_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLEXPIRATIONDATE() {
      return DL_EXPIRATION_DATE;
    }

    /**
      * Sets the value of the 'DL_EXPIRATION_DATE' field.
      * @param value The value of 'DL_EXPIRATION_DATE'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLEXPIRATIONDATE(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.DL_EXPIRATION_DATE = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_EXPIRATION_DATE' field has been set.
      * @return True if the 'DL_EXPIRATION_DATE' field has been set, false otherwise.
      */
    public boolean hasDLEXPIRATIONDATE() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'DL_EXPIRATION_DATE' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLEXPIRATIONDATE() {
      DL_EXPIRATION_DATE = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_ENTRY_FORMAT_FAILED' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLENTRYFORMATFAILED() {
      return DL_ENTRY_FORMAT_FAILED;
    }

    /**
      * Sets the value of the 'DL_ENTRY_FORMAT_FAILED' field.
      * @param value The value of 'DL_ENTRY_FORMAT_FAILED'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLENTRYFORMATFAILED(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.DL_ENTRY_FORMAT_FAILED = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_ENTRY_FORMAT_FAILED' field has been set.
      * @return True if the 'DL_ENTRY_FORMAT_FAILED' field has been set, false otherwise.
      */
    public boolean hasDLENTRYFORMATFAILED() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'DL_ENTRY_FORMAT_FAILED' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLENTRYFORMATFAILED() {
      DL_ENTRY_FORMAT_FAILED = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_SWIPE_RESPONSE_CODE' field.
      * @return The value.
      */
    public java.lang.Integer getDLSWIPERESPONSECODE() {
      return DL_SWIPE_RESPONSE_CODE;
    }

    /**
      * Sets the value of the 'DL_SWIPE_RESPONSE_CODE' field.
      * @param value The value of 'DL_SWIPE_RESPONSE_CODE'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLSWIPERESPONSECODE(int value) {
      validate(fields()[29], value);
      this.DL_SWIPE_RESPONSE_CODE = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_SWIPE_RESPONSE_CODE' field has been set.
      * @return True if the 'DL_SWIPE_RESPONSE_CODE' field has been set, false otherwise.
      */
    public boolean hasDLSWIPERESPONSECODE() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'DL_SWIPE_RESPONSE_CODE' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLSWIPERESPONSECODE() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_SWIPE_METHOD_INDICATOR' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLSWIPEMETHODINDICATOR() {
      return DL_SWIPE_METHOD_INDICATOR;
    }

    /**
      * Sets the value of the 'DL_SWIPE_METHOD_INDICATOR' field.
      * @param value The value of 'DL_SWIPE_METHOD_INDICATOR'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLSWIPEMETHODINDICATOR(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.DL_SWIPE_METHOD_INDICATOR = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_SWIPE_METHOD_INDICATOR' field has been set.
      * @return True if the 'DL_SWIPE_METHOD_INDICATOR' field has been set, false otherwise.
      */
    public boolean hasDLSWIPEMETHODINDICATOR() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'DL_SWIPE_METHOD_INDICATOR' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLSWIPEMETHODINDICATOR() {
      DL_SWIPE_METHOD_INDICATOR = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_QUALIFYING_CARD_TYPE' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLQUALIFYINGCARDTYPE() {
      return DL_QUALIFYING_CARD_TYPE;
    }

    /**
      * Sets the value of the 'DL_QUALIFYING_CARD_TYPE' field.
      * @param value The value of 'DL_QUALIFYING_CARD_TYPE'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLQUALIFYINGCARDTYPE(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.DL_QUALIFYING_CARD_TYPE = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_QUALIFYING_CARD_TYPE' field has been set.
      * @return True if the 'DL_QUALIFYING_CARD_TYPE' field has been set, false otherwise.
      */
    public boolean hasDLQUALIFYINGCARDTYPE() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'DL_QUALIFYING_CARD_TYPE' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLQUALIFYINGCARDTYPE() {
      DL_QUALIFYING_CARD_TYPE = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'DL_QUALIFYING_CARD_BYPASSED' field.
      * @return The value.
      */
    public java.lang.CharSequence getDLQUALIFYINGCARDBYPASSED() {
      return DL_QUALIFYING_CARD_BYPASSED;
    }

    /**
      * Sets the value of the 'DL_QUALIFYING_CARD_BYPASSED' field.
      * @param value The value of 'DL_QUALIFYING_CARD_BYPASSED'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setDLQUALIFYINGCARDBYPASSED(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.DL_QUALIFYING_CARD_BYPASSED = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'DL_QUALIFYING_CARD_BYPASSED' field has been set.
      * @return True if the 'DL_QUALIFYING_CARD_BYPASSED' field has been set, false otherwise.
      */
    public boolean hasDLQUALIFYINGCARDBYPASSED() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'DL_QUALIFYING_CARD_BYPASSED' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearDLQUALIFYINGCARDBYPASSED() {
      DL_QUALIFYING_CARD_BYPASSED = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'REFERENCE_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getREFERENCEID() {
      return REFERENCE_ID;
    }

    /**
      * Sets the value of the 'REFERENCE_ID' field.
      * @param value The value of 'REFERENCE_ID'.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder setREFERENCEID(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.REFERENCE_ID = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'REFERENCE_ID' field has been set.
      * @return True if the 'REFERENCE_ID' field has been set, false otherwise.
      */
    public boolean hasREFERENCEID() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'REFERENCE_ID' field.
      * @return This builder.
      */
    public com.kafka.avro.legalentity.Builder clearREFERENCEID() {
      REFERENCE_ID = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public legalentity build() {
      try {
        legalentity record = new legalentity();
        record.LEGAL_ENTITY_ID = fieldSetFlags()[0] ? this.LEGAL_ENTITY_ID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.APPLICATION_ID = fieldSetFlags()[1] ? this.APPLICATION_ID : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.LEGAL_ENTITY_TYPE_CD = fieldSetFlags()[2] ? this.LEGAL_ENTITY_TYPE_CD : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.TAX_ID = fieldSetFlags()[3] ? this.TAX_ID : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.PRIMARY_EMAIL_ADDRESS = fieldSetFlags()[4] ? this.PRIMARY_EMAIL_ADDRESS : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.ANNUAL_INCOME = fieldSetFlags()[5] ? this.ANNUAL_INCOME : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.INSRT_TS = fieldSetFlags()[6] ? this.INSRT_TS : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.CHNG_TS = fieldSetFlags()[7] ? this.CHNG_TS : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.INSRT_USR_ID = fieldSetFlags()[8] ? this.INSRT_USR_ID : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.CHNG_USR_ID = fieldSetFlags()[9] ? this.CHNG_USR_ID : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.ACTIVE_FLAG = fieldSetFlags()[10] ? this.ACTIVE_FLAG : (java.lang.Integer) defaultValue(fields()[10]);
        record.KYC_VERIFICATION_VENDOR = fieldSetFlags()[11] ? this.KYC_VERIFICATION_VENDOR : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.KYC_VERIFICATION_STATUS = fieldSetFlags()[12] ? this.KYC_VERIFICATION_STATUS : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.KYC_REASON_CODE_1 = fieldSetFlags()[13] ? this.KYC_REASON_CODE_1 : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.KYC_REASON_CODE_2 = fieldSetFlags()[14] ? this.KYC_REASON_CODE_2 : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.KCY_REASON_CODE_3 = fieldSetFlags()[15] ? this.KCY_REASON_CODE_3 : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.KYC_REASON_CODE_4 = fieldSetFlags()[16] ? this.KYC_REASON_CODE_4 : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.ANNUAL_INCOME_AMOUNT = fieldSetFlags()[17] ? this.ANNUAL_INCOME_AMOUNT : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.PRIMARY_APPLICANT_SIGNED = fieldSetFlags()[18] ? this.PRIMARY_APPLICANT_SIGNED : (java.lang.Integer) defaultValue(fields()[18]);
        record.EMAIL_PREFERENCE_FLAG = fieldSetFlags()[19] ? this.EMAIL_PREFERENCE_FLAG : (java.lang.Integer) defaultValue(fields()[19]);
        record.DL_NUMBER = fieldSetFlags()[20] ? this.DL_NUMBER : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.DL_ISSUANCE_STATE = fieldSetFlags()[21] ? this.DL_ISSUANCE_STATE : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.DL_NAME_CHANGED = fieldSetFlags()[22] ? this.DL_NAME_CHANGED : (java.lang.Integer) defaultValue(fields()[22]);
        record.DL_DATE_OF_BIRTH_CHANGED = fieldSetFlags()[23] ? this.DL_DATE_OF_BIRTH_CHANGED : (java.lang.Integer) defaultValue(fields()[23]);
        record.DL_ORIGINAL_ADDRESS_SOURCE = fieldSetFlags()[24] ? this.DL_ORIGINAL_ADDRESS_SOURCE : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.DL_ADDRESS_CHANGED = fieldSetFlags()[25] ? this.DL_ADDRESS_CHANGED : (java.lang.Integer) defaultValue(fields()[25]);
        record.DL_ISSUE_DATE = fieldSetFlags()[26] ? this.DL_ISSUE_DATE : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.DL_EXPIRATION_DATE = fieldSetFlags()[27] ? this.DL_EXPIRATION_DATE : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.DL_ENTRY_FORMAT_FAILED = fieldSetFlags()[28] ? this.DL_ENTRY_FORMAT_FAILED : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.DL_SWIPE_RESPONSE_CODE = fieldSetFlags()[29] ? this.DL_SWIPE_RESPONSE_CODE : (java.lang.Integer) defaultValue(fields()[29]);
        record.DL_SWIPE_METHOD_INDICATOR = fieldSetFlags()[30] ? this.DL_SWIPE_METHOD_INDICATOR : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.DL_QUALIFYING_CARD_TYPE = fieldSetFlags()[31] ? this.DL_QUALIFYING_CARD_TYPE : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.DL_QUALIFYING_CARD_BYPASSED = fieldSetFlags()[32] ? this.DL_QUALIFYING_CARD_BYPASSED : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.REFERENCE_ID = fieldSetFlags()[33] ? this.REFERENCE_ID : (java.lang.CharSequence) defaultValue(fields()[33]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<legalentity>
    WRITER$ = (org.apache.avro.io.DatumWriter<legalentity>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<legalentity>
    READER$ = (org.apache.avro.io.DatumReader<legalentity>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
